{
    "setAdaptiveYMin": true,
    "boxShadow": "{{appsmith.theme.boxShadow.appBoxShadow}}",
    "widgetName": "Chart4",
    "allowScroll": false,
    "dynamicPropertyPathList": [{"key": "onDataPointClick"}],
    "displayName": "Chart",
    "iconSVG": "/static/media/icon.6adbe31e.svg",
    "topRow": 32,
    "bottomRow": 79,
    "parentRowSpace": 10,
    "type": "CHART_WIDGET",
    "hideCard": false,
    "chartData": {"dk4z3scqzb": {
        "data": [
            {
                "x": "Product1",
                "y": 20000
            },
            {
                "x": "Product2",
                "y": 22000
            },
            {
                "x": "Product3",
                "y": 32000
            }
        ],
        "seriesName": "Sales"
    }},
    "animateLoading": true,
    "parentColumnSpace": 21.92578125,
    "dynamicTriggerPathList": [{"key": "onDataPointClick"}],
    "fontFamily": "{{appsmith.theme.fontFamily.appFont}}",
    "leftColumn": 0,
    "dynamicBindingPathList": [
        {"key": "borderRadius"},
        {"key": "customFusionChartConfig"},
        {"key": "boxShadow"},
        {"key": "accentColor"},
        {"key": "fontFamily"}
    ],
    "customFusionChartConfig": "{{(function () {\n  let config = {\n\t\t\ttype: \"msline\",\n\t\t\tdataSource: {\n\t\t\t\tchart: {\n\t\t\t\t\tcaption: \"Metric actions across PRs\",\n\t\t\t\t\tsubCaption: \"Showing selected actions across PRs for the selected metric\",\n\t\t\t\t\txAxisName: \"Lable created with <i>MM/DD (PR ID) - Meta ID<\/i>\",\n\t\t\t\t\tyAxisName: \"Number of \" + utils.getUnitMapToMetric().unit,\n\t\t\t\t\ttheme: \"fusion\"\n    \t\t},\n\t\t\t\tcategories: [{category: []}],\n\t\t\t\tdataset: [],\n\t\t\t\ttrendlines: [\n        {\n            line: []\n        }\n    ]\n\t\t\t}\n\t\t}\n\t\t\n\t\tlet d =  Select2.selectedOptionValue == 'min' ? run_by_metric_min.data : run_by_metric.data\n\t\t\n\t\t// create the config object for the chart with the given data\n\t\td.map((v) => {\n\t\t\t\tif(!_.find(config.dataSource.categories[0].category, {label: moment(v.created_at).format(\"MM/DD\").toString() +\" (\"+ v.pull_request_id.toString() + \") - \"+v.meta})) {\n\t\t\t\t\tconfig.dataSource.categories[0].category.push({\"label\": moment(v.created_at).format(\"MM/DD\").toString() +\" (\"+ v.pull_request_id.toString() + \") - \"+v.meta})\n\t\t\t\t}\n\t\t\t\tif(!_.find(config.dataSource.dataset, {seriesname: v.action})) {\n\t\t\t\t\tconfig.dataSource.dataset.push({seriesname: v.action, data: [{value: v.median}]})\n\t\t\t\t} else {\n\t\t\t\t\t_.find(config.dataSource.dataset, {seriesname: v.action}).data.push({value: v.median})\n\t\t\t\t}\n\t\t})\n\t\n\tif(config.dataSource.dataset.length > 0){\n\t\tconfig.dataSource.dataset.map((v) => {\n\t\t\tvar x = _.meanBy(v.data, (p) => p.value)\n\t\t\tconfig.dataSource.trendlines[0].line.push({\n\t\t\t\t\"startvalue\": x,\n\t\t\t\t\"color\": Math.floor(Math.random()*16777215).toString(16),\n\t\t\t\t\"valueOnRight\": \"1\",\n\t\t\t\t\"displayvalue\": \"Mean\"\n\t\t\t})\n\t\t})\n\t}\n\t\t\n\t\treturn config\n})();}}",
    "onDataPointClick": "{{(function () { storeValue('metricDetail',Chart4.selectedDataPoint.x, false)\n\t\t\t\t\t\t\t\t\t\tshowModal(\"Modal1\")\n\trun_meta.run()\n\n})()}}",
    "customEChartConfig": {
        "yAxis": [{"type": "value"}],
        "xAxis": [{"type": "category"}],
        "legend": {
            "top": 40,
            "type": "scroll"
        },
        "grid": {
            "top": 100,
            "left": 15,
            "bottom": 30,
            "right": 15,
            "containLabel": true
        },
        "series": [
            {
                "stack": "Search Engine",
                "type": "bar"
            },
            {
                "stack": "Search Engine",
                "type": "bar"
            },
            {
                "stack": "Search Engine",
                "type": "bar"
            }
        ],
        "tooltip": {
            "axisPointer": {"type": "shadow"},
            "trigger": "axis"
        },
        "title": {
            "left": "center",
            "text": "Search Engine Usage",
            "textStyle": {
                "overflow": "truncate",
                "width": 200
            }
        },
        "dataset": {"source": [
            [
                "Day",
                "Baidu",
                "Google",
                "Bing"
            ],
            [
                "Mon",
                620,
                120,
                60
            ],
            [
                "Tue",
                732,
                132,
                72
            ],
            [
                "Wed",
                701,
                101,
                71
            ],
            [
                "Thu",
                734,
                134,
                74
            ],
            [
                "Fri",
                1090,
                290,
                190
            ],
            [
                "Sat",
                1130,
                230,
                130
            ],
            [
                "Sun",
                1120,
                220,
                110
            ]
        ]}
    },
    "key": "an9viw4yzm",
    "showDataPointLabel": false,
    "labelTextSize": "0.875rem",
    "rightColumn": 64,
    "widgetId": "bjkt24yd9h",
    "accentColor": "{{appsmith.theme.colors.primaryColor}}",
    "isVisible": true,
    "version": 1,
    "parentId": "0",
    "labelOrientation": "auto",
    "renderMode": "CANVAS",
    "isLoading": false,
    "yAxisName": "Revenue($)",
    "chartName": "Actions for a metric across PRs",
    "borderRadius": "{{appsmith.theme.borderRadius.appBorderRadius}}",
    "xAxisName": "Product Line",
    "chartType": "CUSTOM_FUSION_CHART"
}